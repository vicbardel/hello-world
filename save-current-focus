// Function to trap focus within the modal
function trapFocus(event, interactiveElement) {
    // If the pressed key is 'Tab', prevent the default behavior and focus the interactive element
    if (event.key === 'Tab' || event.keyCode === 9) {
        event.preventDefault();
        interactiveElement.focus();
    }
}

function toggletext(id) {
    let modal = document.getElementById("myModal" + id);
    let span = document.getElementById("close" + id);

    // Save the currently focused element before opening the modal
    lastFocusedElement = document.activeElement;

    // Display the modal and add the 'show' class to it
    modal.style.display = "block";
    modal.classList.add("show");
    
    // Focus the close button (span)
    span.focus();

    // Add a keydown event listener to the modal to trap focus within it
    modal.addEventListener('keydown', function (event) {
        trapFocus(event, span);
    });

    // When the close button (span) is clicked, hide the modal and remove the 'show' class
    span.onclick = function () {
        modal.style.display = "none";
        modal.classList.remove("show");

        // If lastFocusedElement is defined, set the focus back to the previously focused element
        if (lastFocusedElement) {
            lastFocusedElement.focus();
        }
    }

    // When clicking outside the modal, hide it and remove the 'show' class
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
            modal.classList.remove("show");

            // If lastFocusedElement is defined, set the focus back to the previously focused element
            if (lastFocusedElement) {
                lastFocusedElement.focus();
            }
        }
    }
}
